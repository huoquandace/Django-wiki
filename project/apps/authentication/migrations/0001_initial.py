# Generated by Django 4.1.4 on 2022-12-25 04:56

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, max_length=100, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('U', 'Unknown')], max_length=100, verbose_name='gender')),
                ('degree', models.CharField(blank=True, choices=[('Professional Certificate', 'Professional Certificate'), ('Undergraduate Degrees', 'Undergraduate Degrees'), ('Transfer Degree', 'Transfer Degree'), ('Associate Degree', 'Associate Degree'), ('Bachelor Degree', 'Bachelor Degree'), ('Graduate Degrees', 'Graduate Degrees'), ('Master Degree', 'Master Degree'), ('Doctoral Degree', 'Doctoral Degree'), ('Professional Degree', 'Professional Degree'), ('Specialist Degree', 'Specialist Degree')], max_length=100, null=True, verbose_name='degree')),
                ('marital_status', models.CharField(blank=True, choices=[('Single ', 'Single '), ('Engaged', 'Engaged'), ('Married', 'Married'), ('Separated', 'Separated'), ('Divorced', 'Divorced'), ('Widow', 'Widow'), ('Widower', 'Widower'), ('Unknown', 'Unknown')], max_length=100, null=True, verbose_name='marital_status')),
                ('first_name', models.CharField(blank=True, max_length=100, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='last name')),
                ('phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='phone')),
                ('birthday', models.DateField(blank=True, max_length=10, null=True, verbose_name='birthday')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='age')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='address')),
                ('avatar', models.ImageField(default='images/avatar_default1.jpg', upload_to='images')),
                ('citizen_identification', models.CharField(blank=True, max_length=100, null=True, verbose_name='citizen identification')),
                ('tax_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='tax code')),
                ('certificate', models.TextField(blank=True, null=True, verbose_name='certificate')),
                ('license_plates', models.CharField(blank=True, max_length=100, null=True, verbose_name='license_plates')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
